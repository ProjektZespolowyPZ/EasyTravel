@page "/users/{Id:int}"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Headers

@inject NavigationManager NavigationManager

@inject HttpClient Http

<div class="page">
    <AuthorizeView>
        <Authorized Context="Auth">
            @if (user == null)
            {
                <p>Wczytywanie...</p>
            }
            else
            {
               
                <div>
                    <div class="top">
                         <img src="background.png" class="background-img" alt="background">
                       @if (user.ProfilePicture != "")
                        {
                            <div>
                                <img class="avatar-img" src="@user.ProfilePicture"/>
                            </div>                  
                        }
                        else{
                            <div>
                                <img class="avatar-img" src="person.icon.png" />
                            </div>
                        }
                        <br>
                        <br>
                        <br>

                        <h5>@user.Name @user.Surname</h5>      
                        <div class="contacts">
                            <h6>Kontakt:</h6>
                            <label>@user.Email</label><br>
                            <label>@user.PhoneNumber</label>

                        </div>
              
                        <h5 style="padding: 10px;">Wycieczki</h5>
                        <br>
                    </div>
                    <div class="panel-full">
                        @foreach (var item in user.UserTours)
                        {

                            <div @onclick="() => GoToDetails(item.Id)">
                                
                                @if (item.MainPhoto != "")
                                {
                                    <div class="background">
                                    <img src="@item.MainPhoto"/>
                                        <div class="name">@item.TourName</div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    </div>
                
                    
            }
        </Authorized>
        <NotAuthorized>
            <p>Nie można wyświetlić strony niezalogowanym użytkownikom</p>
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    private UserInformationVm user;


    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<UserInformationVm>($"api/users/GetOtherUserInformation/{Id}");
        user.UserTours.Reverse();
    }

    public void GoToDetails(int id)
    {
        NavigationManager.NavigateTo($"/tours/{id}");
    }
}

