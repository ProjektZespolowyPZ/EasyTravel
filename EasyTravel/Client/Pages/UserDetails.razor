@page "/users/GetUserInformation"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Headers

@inject NavigationManager NavigationManager

@inject HttpClient Http

<div class="page">
    <AuthorizeView>
        <Authorized Context="Auth">
            @if (user == null)
            {
                <p>Wczytywanie...</p>
            }
            else
            {
                <div class="border">
                    <div class="left">
                        <h3>Twój awatar</h3>
                        @if (user.ProfilePicture != "")
                        {
                            <div>
                                <img src="@user.ProfilePicture"/>
                            </div>
                              

                        }
                        <div class="changeAvatar">
                            <div class="zmiana">
                                <h6>Zmiana awatara</h6>
                            </div>
                            <div class="chooseFile">
                                <InputFile OnChange="@HandleSelected" />
                            </div>
                        </div>
                    </div>
                    <div class="right" style="">
                        <h3>Dane konta</h3>
                     
                        <h6>Imię </h6>
                        <div class="form-row form-control" style="padding:5px;">
                            <label>@user.Name  <button type="button" class="bnt bchange">Zmień</button></label>
                           

                        </div>
                        
                        <h6>Nazwisko </h6>
                        <div class="form-row form-control" style="padding: 5px;">
                            <label>@user.Surname <button type="button" class="bnt bchange">Zmień</button></label>
                            
                        </div>
                        
                        <h6>E-Mail </h6>
                        <div class="form-row form-control" style="padding: 5px;">
                            <label>@user.Email <button type="button" class="bnt bchange">Zmień</button></label>
                           
                        </div>
                        
                        <h6>Numer Telefonu </h6>
                        <div class="form-row form-control" style="padding: 5px;">
                            <label>@user.PhoneNumber   <button type="button" class="bnt bchange">Zmień</button></label>
                            
                        </div>  
                       <br>
                        <h6 class="info">Konto założone dnia: @user.RegistrationDate</h6>
                        
                    </div>         
                </div>
            }
        </Authorized>
        <NotAuthorized>
            <p>Nie można wyświetlić strony niezalogowanym użytkownikom</p>
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {
    private UserInformationVm user;
    public string FileUrl { get; set; }
    public string FileType { get; set; }
    UpdateAvatar model = new UpdateAvatar();


    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<UserInformationVm>($"api/users/GetAllInformation");
    }


    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        FileType = file.ContentType;
        if (file == null)
            return;
        using (var ms = file.OpenReadStream(file.Size))
        {
            var content = new MultipartFormDataContent();
            content.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data");
            content.Add(new StreamContent(ms, Convert.ToInt32(file.Size)), FileType, file.Name);
            var response = await Http.PostAsync("api/upload/avatar", content);
            FileUrl = await response.Content.ReadAsStringAsync();
            user.ProfilePicture = FileUrl;

            model.Id = user.Id;
            model.Avatar = user.ProfilePicture;
            var modelJson = JsonSerializer.Serialize(model, new JsonSerializerOptions { WriteIndented = true });
            var content1 = new StringContent(modelJson, Encoding.UTF8, "application/json");
            await Http.PutAsync("api/users/update-avatar", content1);
        }
    }
}

