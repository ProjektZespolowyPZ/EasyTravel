@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
<AuthorizeView>
   
    <Authorized Context="Auth">
       
          
            <div><MudButton Variant="Variant.Text" @onclick="GoToMainPage" Class="logo">Logo</MudButton></div>
                <div class="search">
            <EditForm Model="@enterSearchingWord" OnValidSubmit="@Search">
                <InputText placeholder="Znajdź wycieczkę" @bind-Value="@enterSearchingWord.Word" class="bar" />
                    <button type="submit"><i class="fa fa-search"></i></button>
                </EditForm>
                </div>
        
                <div><MudButton Variant="Variant.Text" @onclick="BeginSignOut" Class="signOut"  >Wyloguj</MudButton></div>
        <div><MudButton Variant="Variant.Text" @onclick="GoToMainPage" Class="about">O nas</MudButton></div>
        <div><MudButton Variant="Variant.Text" @onclick="GoToMainPage" Class="contacts" >Kontakt</MudButton></div>
        <div class="menu">
                <ol>
                    <li><a>Mój Profil</a>
                        <ul>
                            <li><a href="/users/GetUserInformation">Pokaż profil</a></li>
                            <li><a href="/users/GetUserTours">Moje wycieczki</a></li>      
                        </ul>
                    </li>
                </ol>
        </div>
      
    </Authorized>
    
    <NotAuthorized>

        <MudDivider Class="logo"></MudDivider><MudButton Variant="Variant.Text" @onclick="GoToMainPage" Style="color: white; font-size:28px;">Logo</MudButton>
        <MudButton Variant="Variant.Text"  Style="color: white;  margin-left: 20vw;padding: 1%">O nas</MudButton>
        <MudButton Variant="Variant.Text"  Style="color: white; padding: 1%">Kontakt</MudButton>
        <a href="authentication/login" class="login">Zaloguj</a>
    </NotAuthorized>
</AuthorizeView>

@code {

    bool _isExpanded = true;

    private UserInformationVm user;

    public EnterSearchingWord enterSearchingWord { get; set; } = new EnterSearchingWord();

    public string TextValue { get; set; }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void GoToMainPage()
    {
        enterSearchingWord.Word = "";
        Navigation.NavigateTo("/");
    }

    private void Search()
    {
        Navigation.NavigateTo($"/searching/{enterSearchingWord.Word}");
    }

}
